[{"D:\\coding\\aoc\\aoc-leaderboard-display\\src\\index.js":"1","D:\\coding\\aoc\\aoc-leaderboard-display\\src\\PuzzleTableCell.js":"2","D:\\coding\\aoc\\aoc-leaderboard-display\\src\\App.js":"3","D:\\coding\\aoc\\aoc-leaderboard-display\\src\\CompleteTable.js":"4","D:\\coding\\aoc\\aoc-leaderboard-display\\src\\getOrdinal.js":"5","D:\\coding\\aoc\\aoc-leaderboard-display\\src\\Table.js":"6","D:\\coding\\aoc\\aoc-leaderboard-display\\src\\NameTable.js":"7"},{"size":500,"mtime":1608921301911,"results":"8","hashOfConfig":"9"},{"size":595,"mtime":1610656890856,"results":"10","hashOfConfig":"9"},{"size":1432,"mtime":1610662572430,"results":"11","hashOfConfig":"9"},{"size":3377,"mtime":1610669454600,"results":"12","hashOfConfig":"9"},{"size":677,"mtime":1610654451765,"results":"13","hashOfConfig":"9"},{"size":1815,"mtime":1610663379221,"results":"14","hashOfConfig":"9"},{"size":2315,"mtime":1610669750332,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o7cl3m",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\coding\\aoc\\aoc-leaderboard-display\\src\\index.js",[],"D:\\coding\\aoc\\aoc-leaderboard-display\\src\\PuzzleTableCell.js",[],"D:\\coding\\aoc\\aoc-leaderboard-display\\src\\App.js",[],"D:\\coding\\aoc\\aoc-leaderboard-display\\src\\CompleteTable.js",["32"],"import React, {useEffect, useMemo, useState} from 'react';\r\nimport NameTable from \"./NameTable\";\r\nimport Table from \"./Table\";\r\nimport getRankings from \"./getRankings\";\r\n\r\nfunction CompleteTable({leaderboardData}) {\r\n    const [leaderboardPlacings, setLeaderboardPlacings] = useState([])\r\n    const generateTimestampCell = ({cell: {value}}, puzzleDay) => {\r\n        if (!value) {\r\n            return null // don't render anything if the person hasn't completed the day's puzzle\r\n        }\r\n        let date = new Date(parseInt(value, 10) * 1000)\r\n        let days = date.getDate() - puzzleDay\r\n        let minutes = '0' + date.getMinutes()\r\n        let seconds = '0' + date.getSeconds()\r\n        let hours = '0' + date.getHours()\r\n        return (\r\n            <p className='timestamp-time'>\r\n                {days + ' day' + ((days === 1) ? '' : 's')},\r\n                <br/>\r\n                {hours.substr(-2)}:{minutes.substr(-2)}:{seconds.substr(-2)}\r\n            </p>\r\n        )\r\n    }\r\n    const generatePuzzleColumns = () => {\r\n        let tableColumns = []\r\n        for (let i = 1; i <= 25; i++) {\r\n            tableColumns.push({\r\n                Header: 'Day ' + i,\r\n                columns: [\r\n                    {\r\n                        Header: 'Part 1',\r\n                        accessor: 'completion_day_level.' + i + '.1.get_star_ts',\r\n                        Cell: (cell) => generateTimestampCell(cell, i)\r\n                    },\r\n                    {\r\n                        Header: 'Part 2',\r\n                        accessor: 'completion_day_level.' + i + '.2.get_star_ts',\r\n                        Cell: (cell) => generateTimestampCell(cell, i)\r\n                    }\r\n                ]\r\n            })\r\n        }\r\n        return tableColumns\r\n    }\r\n    const puzzleColumns = useMemo(\r\n        generatePuzzleColumns, []\r\n    )\r\n    const generateDayPlacings = () => {\r\n        let placingsArray = []\r\n        for (let i = 0; i < 50; i++) {\r\n            let currentDayTimes = []\r\n            for (let memberIndex = 0; memberIndex < leaderboardData.length; memberIndex++) {\r\n                let currentDay = Math.floor(i / 2) + 1\r\n                let currentPart = i % 2 + 1\r\n                let puzzleTimestamps = leaderboardData[memberIndex]['completion_day_level'][currentDay]\r\n\r\n                if (!puzzleTimestamps || !puzzleTimestamps[currentPart]) {\r\n                    currentDayTimes.push(Infinity)\r\n                } else {\r\n                    currentDayTimes.push(\r\n                        parseInt(puzzleTimestamps[currentPart]['get_star_ts'], 10)\r\n                    )\r\n                }\r\n            }\r\n            placingsArray.push(getRankings(currentDayTimes, false))\r\n        }\r\n        setLeaderboardPlacings(placingsArray)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (leaderboardData.length) {\r\n            console.log(leaderboardData)\r\n            generateDayPlacings()\r\n        }\r\n    }, [leaderboardData])\r\n\r\n    return (\r\n        <div className='tableArea'>\r\n            <div className='nameTable'>\r\n                <NameTable lbData={leaderboardData}/>\r\n            </div>\r\n            <div className='puzzleTable'>\r\n                <Table columns={puzzleColumns} data={leaderboardData}\r\n                       rankings={leaderboardPlacings}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompleteTable;\r\n",["33","34"],"D:\\coding\\aoc\\aoc-leaderboard-display\\src\\getOrdinal.js",[],"D:\\coding\\aoc\\aoc-leaderboard-display\\src\\Table.js",[],"D:\\coding\\aoc\\aoc-leaderboard-display\\src\\NameTable.js",["35","36"],{"ruleId":"37","severity":1,"message":"38","line":76,"column":8,"nodeType":"39","endLine":76,"endColumn":25,"suggestions":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":3,"column":8,"nodeType":"47","messageId":"48","endLine":3,"endColumn":19},{"ruleId":"37","severity":1,"message":"49","line":26,"column":8,"nodeType":"39","endLine":26,"endColumn":10,"suggestions":"50"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'generateDayPlacings'. Either include it or remove the dependency array.","ArrayExpression",["51"],"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'getRankings' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getOverallRankings'. Either include it or remove the dependency array.",["54"],{"desc":"55","fix":"56"},"no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [generateDayPlacings, leaderboardData]",{"range":"59","text":"60"},"Update the dependencies array to be: [getOverallRankings]",{"range":"61","text":"62"},[2938,2955],"[generateDayPlacings, leaderboardData]",[844,846],"[getOverallRankings]"]